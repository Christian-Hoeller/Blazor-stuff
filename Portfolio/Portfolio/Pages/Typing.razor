@page "/typing"

<h3>Typing Test</h3>

<div class="word-container">
    @for (int i = 0; i < WordSet.Length; i++)
    {
        <span class="word-@i" style="@WordSetStyles[i].ToString()">@WordSet[i]</span>
    }
</div>

<div class="word-input">
    <input type="text" @onkeyup="KeyUp" @bind-value="InputValue" @bind-value:event="oninput" />
</div>



@code {
    protected override void OnInitialized()
    {
        FillWordSet();
        FillStyles();
    }

    private void FillStyles()
    {
        WordSetStyles = new Classes.WordStyle[WordSet.Length];
        for (int i = 0; i < WordSetStyles.Length; i++)
        {
            WordSetStyles[i] = new Classes.WordStyle(System.Drawing.Color.White, System.Drawing.Color.Black);
        }
        WordSetStyles[0].BackgroundColor = System.Drawing.Color.LightGray;
    }

    private string currentWord;

    private string InputValue { get; set; }

    private string[] WordSet { get; set; }

    private Portfolio.Classes.WordStyle[] WordSetStyles { get; set; }


    private int currentWordIndex = 0;


    private void FillWordSet()
    {
        string[] words = new string[200];
        List<string> wordList = new List<string>() { "Hallo", "wie", "geht", "es", "dir", "du", "coolian" };
        Random r = new Random();

        for (int i = 0; i < words.Length; i++)
        {
            words[i] = wordList[r.Next(0, wordList.Count - 1)];
        }
        WordSet = words;
    }

    private void KeyUp(KeyboardEventArgs e)
    {
        UpdateWordStlye();
        if (e.Key == " ")
        {
            currentWord = InputValue.Split(" ")[0];
            string charactersAfterSpace = InputValue.Split(" ")[1];
            bool wordIsRight = CheckIfInputIsRight();

            ClearInput();
            InputValue = charactersAfterSpace;
            currentWordIndex++;
            UpdateBackgroundHighlight();
        }
    }

    private bool CheckIfInputIsRight()
    {
        Console.WriteLine($"currentword={currentWord}_/{WordSet[currentWordIndex]}_");
        return currentWord == WordSet[currentWordIndex];
    }

    private void ClearInput()
    {
        currentWord = string.Empty;
        InputValue = string.Empty;
    }

    private void UpdateBackgroundHighlight()
    {
        WordSetStyles[currentWordIndex - 1].BackgroundColor = System.Drawing.Color.White;
        WordSetStyles[currentWordIndex].BackgroundColor = System.Drawing.Color.LightGray;
        Console.WriteLine(System.Drawing.Color.LightGray.Name);
    }

    private void UpdateWordStlye()
    {
        if (!WordSet[currentWordIndex].StartsWith(InputValue.Split(" ")[0]))
        {
            WordSetStyles[currentWordIndex].Color = System.Drawing.Color.Red;
        }
        else
        {
            WordSetStyles[currentWordIndex].Color = System.Drawing.Color.Black;
        }
    }
}